package processcontrol;

/**
 * 重点
 * 数组类型-介绍
 *
 * Java 的数组要求所有的数组元素具有相同的数据类型。因此， 在一个数组中， 数组元素的类型是唯一的，
 * 即一个数组里只能存储一种数据类型的数据，而不能存储多种数据类型的数据。
 * 因为Java 语言是面向对象的语言，而类与类之间可以支持继承关系，这样可能产生
 * 一个数组里可以存放多种数据类型的假象。例如有一个水果数组，要求每个数纽元素都是
 * 水果，实际上数组元素既可以是苹果， 也可以是香蕉(苹果、香蕉都继承了水果，都是一
 * 种特殊的水果)， 但这个数组的数组元素的类型还是唯一的，只能是水果类型。
 *
 * 重点：
 * 1.一旦数组的初始化完成，数组在内存中所占的空间将被固定下来，因此数组的长度将不可改变。（即
 * 使把某个数组元素的数据清空， 但它所占的空间依然被保留， 依然属于该数组， 数组的长度依然不变。）
 * 2.Java 的数组既可以存储基本类型的数据，也可以存储引用类型的数据，只要所有的数组元素具有相
 * 同的类型即可。
 * 3.数组也是一种数据类型， 它本身是一种引用类型。例如int 是一个基本类型， 但int[]
 * (这是定义数组的一种方式)就是一种引用类型了。
 * Java 语言支持两种语法格式来定义数组:
 * type[] arrayName;
 * type arrayName[];
 * 对这两种语法格式而言，通常推荐使用第二种格式。因为第一种格式不仅具有更好的语意，而且具
 * 有更好的可读性。
 * 4.数组是一种引用类型的变量， 因此使用它定义一个变量时，仅仅表示定义了一个引用变量( 也就是
 * 定义了一个指针) ，这个引用变量还未指向任何有效的内存， 因此定义数组时不能指定数组的长度。而
 * 且由于定义数组只是定义了一个引用变量，并未指向任何有效的内存空间， 所以还没有内存空间来存储
 * 数组元素， 因此这个数组也不能使用，只有对数组进行初始化后才可以使用。
 * 5.定义数组时不能指定数组的长度。（指定义数组非初始化数组）
 * 6.Java 语言中数组必须先初始化，然后才可以使用。所谓初始化，就是为数组的数组元素分配内存空
 * 间， 并为每个数组元素赋初始值。
 * 7.数组的初始化有如下两种方式。
 * 静态初始化: 初始化时由程序员显式指定每个数组元素的初始值，由系统决定数组长度。以下是语法格式
 * // 定义数组
 * type[] arrayName;
 * // 数组静态初始化
 * arrayName = new type[] {element1 , element2 , element3 , element4 .. . }
 * 除此之外，静态初始化还有如下简化的语法格式:
 * // 定义数组的同时并初始化
 * type[] arrayName = {element1 , element2 , element3 , element4 . . . )
 * 动态初始化: 初始化时程序员只指定数组长度，由系统为数组元素分配初始值。以下是语法格式
 * // 定义数组
 * type arrayName[];
 * // 数组动态初始化
 * arrayName = new type[length];
 * 除此之外，动态初始化还有如下简化的语法格式:
 * // 定义数组的同时并初始化
 * type[] arrayName = new type[length];
 * 在上面语法中， 需要指定一个type 类型的length 参数， 这个参数指定了数组的长度，也就是可以容
 * 纳数组元素的个数。与静态初始化相似的是，此处的type 必须与定义数组时使用的type 类型相同， 或
 * 者是定义数组时使用的type 类型的子类。
 * 8.执行动态初始化时，程序员只需指定数组的长度， 即为每个数组元素指定所需的内存空间，系统将
 * 负责为这些数组元素分配初始值。指定初始值时， 系统按如下规则分配初始值：
 * 数组元素的类型是基本类型中的整数类型（ byte 、short、int 和 long ) ， 则数组元素的值是0 。
 * 数组元素的类型是基本类型中的浮点类型（ float 、double ) ， 则数组元素的值是0.0 。
 * 数组元素的类型是基本类型中的字符类型（ char )，则数组元素的值是'\u0000' 。
 * 数组元素的类型是基本类型中的布尔类型( boolean ) ， 则数组元素的值是false 。
 * 数组元素的类型是引用类型(类、接口和数组) ，则数组元素的值是null 。
 * 不要同时使用静态初始化和动态初始化， 也就是说， 不要在进行数组初始化时，既指可
 * 定数组的长度， 也为每个数组元素分配初始值。
 * 数组初始化完成后，就可以使用数组了，包括为数组元素赋值、访问数组元素值和获得数组长度等。
 *
 * @author JIE
 */
public class ArrayTypeIntroduction {
}
