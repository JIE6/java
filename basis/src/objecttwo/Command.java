package objecttwo;

/**
 * 命令模式
 *
 * 考虑这样一种场景: 某个方法需要完成某一个行为， 但这个行为的具体实现无法确定，必须等到执行该方法时才可以确定
 * 具体一点: 假设有个方法需要遍历某个数组的数组元素， 但无法确定在遍历数组元素时如何处理这些元素， 需要在调用该方法时指定具体的处理行为。
 *
 * 这个要求看起来有点奇怪: 这个方法不仅需要普通数据可以变化， 甚至还有方法执行体也需要变化，难道需要把" 处理行为"作为一个参数传入该方法?
 *
 * 扩展：现在Java 8已经增加了Lambda 表达式，通过Lambda 表达式可以传入代码块作为参数。
 *
 * 对于这样一个需求，必须把" 处理行为"作为参数传入该方法，这个"处理行为"用编程来实现就是一段代码。那如何把这段代码传入该方法呢?
 *
 * 可以考虑使用一个Command 接口来定义一个方法，用这个方法来封装"处理行为"
 * @author JIE
 */
public interface Command {

    /**
     * 接口里定义的process 方法用于封装"处理行为"
     * @param target
     */
    void process(int[] target);
}
